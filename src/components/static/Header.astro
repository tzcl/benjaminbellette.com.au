---
import Icon from "../dynamic/Icon.svelte";
import logo from "../../assets/logo-dark.png";

const path = Astro.url.pathname;
function active(item: string): string {
  if (item === path) return "active";
  return "";
}

// TODO: move this into data
const pages = [
  {
    link: "/motion",
    text: "Motion",
    children: [
      { link: "/motion#reel", text: "Reel" },
      { link: "/motion#mumlife", text: "MumLife Trailer" },
      { link: "/motion#music", text: "Music Videos" },
      { link: "/motion#commercials", text: "Commercials" },
      { link: "/motion#films", text: "Films" },
      { link: "/motion#corporates", text: "Corporates" },
      { link: "/motion#documentaries", text: "Documentaries" },
    ],
  },
  {
    link: "/stills",
    text: "Stills",
    children: [
      { link: "/stills#bts", text: "Behind the scenes" },
      { link: "/stills#photography", text: "Photography" },
    ],
  },
  { link: "/contact", text: "Contact" },
];
---

<!-- Need this div to reserve space for the header to shrink -->
<div class="sticky top-0 h-[86px] z-20">
  <header class="md:flex md:justify-between bg-black sticky top-0">
    <!-- Logo and hamburger menu -->
    <div class="flex justify-between items-center">
      <a href="/">
        <div id="logo" class="m-4 transition-all scrolled:my-2">
          <img
            src={logo}
            alt="Logo - Benjamin Bellette"
            class="transition-all w-[236px] h-[54px] scrolled:w-[177px] scrolled:h-[40.5px]"
          />
        </div>
      </a>

      <img
        src="./assets/menu.svg"
        width="32px"
        height="32px"
        class="m-4 hover:cursor-pointer md:hidden"
        id="hamburger"
      />
    </div>

    <!-- Mobile navbar -->
    <nav id="nav" data-visible="false" class="mx-4 md:mx-8">
      <ul
        class="hidden shown:block shown:animate-slide-in hiding:block hiding:animate-slide-out py-4"
      >
        {
          pages.map((page, i) => (
            <>
              <li
                key={i}
                class={`${active(page.link)} border-t border-gray-400 py-2`}
              >
                <a
                  href={page.link}
                  class="no-underline opacity-60 hover:text-[#b1b1b1] [.active_&]:opacity-100"
                >
                  {page.text}
                </a>
              </li>
              {page.children &&
                page.children.map((section, i) => (
                  <li
                    key={i}
                    class={`${active(
                      page.link
                    )} border-t border-gray-400 py-2 pl-4`}
                  >
                    <a
                      href={section.link}
                      class="opacity-60 hover:text-[#b1b1b1] [.active_&]:opacity-100"
                    >
                      {section.text}
                    </a>
                  </li>
                ))}
            </>
          ))
        }
      </ul>

      <!-- Desktop navbar -->
      <div class="hidden md:flex md:gap-8 md:items-stretch h-full w-full">
        {
          pages.map((page, i) => (
            <button
              key={i}
              class={`${active(page.link)} group relative text-left`}
            >
              <a href={page.link} class="group-hover:text-[#b1b1b1]">
                {page.text}
                {page.children && (
                  <Icon name="chevron-down" class="-ml-1 inline" />
                )}
              </a>
              {page.children && (
                <div class="invisible absolute top-full left-0 z-20 translate-y-[-5%] bg-[#1e1e1e] p-4 opacity-0 transition-all duration-[250] group-hover:visible group-hover:translate-y-0 group-hover:opacity-100">
                  <ul>
                    {page.children.map((section, i) => (
                      <li
                        key={i}
                        class="py-2 px-4 opacity-60 hover:bg-[#333] hover:opacity-100"
                      >
                        <a href={section.link}>{section.text}</a>
                      </li>
                    ))}
                  </ul>
                </div>
              )}
            </button>
          ))
        }
      </div>
    </nav>
  </header>
</div>

<script>
  // Implement hamburger menu
  const hamburger = document.getElementById("hamburger") as HTMLImageElement;
  const nav = document.getElementById("nav");

  hamburger.addEventListener("click", () => {
    const visible = nav.getAttribute("data-visible");

    if (visible === "false") {
      // open menu
      nav.setAttribute("data-visible", "true");
      hamburger.classList.add("open");
      hamburger.src = "./assets/x.svg";
    } else {
      // start hiding menu
      nav.setAttribute("data-visible", "hiding");
      hamburger.classList.remove("open");
      hamburger.src = "./assets/menu.svg";

      // close the menu after 250ms
      setTimeout(() => nav.setAttribute("data-visible", "false"), 250);
    }
  });

  const activeItems = document.querySelectorAll(".active > a");
  for (const item of activeItems) {
    item.addEventListener("click", () => {
      hamburger.click();
    });
  }

  // Implement scroll listener
  const storeScroll = () => {
    document.documentElement.dataset.scroll = String(window.scrollY > 0);
  };

  const debounce = (fn) => {
    let frame;
    return (...params) => {
      // If the frame var has been defined, clear it and queue for the next frame
      if (frame) cancelAnimationFrame(frame);

      // Queue our function call for the next frame
      frame = requestAnimationFrame(() => {
        fn(...params);
      });
    };
  };

  document.addEventListener("scroll", debounce(storeScroll), {
    passive: true,
  });

  storeScroll();
</script>
