---
import { Image } from "@astrojs/image/components";
import logo from "../assets/logo-dark.png";

const path = Astro.url.pathname;
function active(item: string): string {
  if (item === path) return "active";
  return "";
}

const pages = [
  {
    link: "/motion",
    text: "Films",
    children: [
      { link: "/motion#reel", text: "Reel" },
      { link: "/motion#music", text: "Music Videos" },
      { link: "/motion#commercials", text: "Commercials" },
      { link: "/motion#films", text: "Films" },
      { link: "/motion#corporates", text: "Corporates" },
      { link: "/motion#documentaries", text: "Documentaries" },
    ],
  },
  {
    link: "/stills",
    text: "Stills",
    children: [
      { link: "/stills#bts", text: "Behind the scenes" },
      { link: "/stills#photography", text: "Photography" },
    ],
  },
  { link: "/contact", text: "Contact" },
];
---

<header>
  <div class="row">
    <a href="/">
      <div id="logo">
        <!-- TODO: this doesn't work on mobile/Edge -->
        <Image src={logo} format="avif" />
      </div>
    </a>

    <div class="hamburger">
      <span class="bar bar1"></span>
      <span class="bar bar2"></span>
      <span class="bar bar3"></span>
      <span class="bar bar4"></span>
    </div>
  </div>

  <!-- TODO: replace these with Swup's link elements -->
  <!-- Yeah, I could do that... but links themselves are fine -->
  <nav>
    <ul data-visible="false">
      {
        pages.map((page, i) => (
          <>
            <li key={i} class={active(page.link)}>
              <a href={page.link}>{page.text}</a>
            </li>
            {page.children &&
              page.children.map((section, i) => (
                <li key={i} class={active(page.link)}>
                  <a href={section.link}>{section.text}</a>
                </li>
              ))}
          </>
        ))
      }
    </ul>
  </nav>
</header>

<style>
  .row {
    display: flex;
    justify-content: space-between;
  }

  #logo {
    margin: 1rem;
  }

  nav {
    margin: 0 1em;
  }

  ul {
    list-style: none;
    margin: 0;
    padding: 0 0 1em 0;

    display: none;
  }

  ul[data-visible="true"],
  ul[data-visible="hiding"] {
    display: block;
  }

  li {
    padding: 0.5em 0;
    border-top: 1px solid grey;
  }

  a {
    text-decoration: none;
  }

  a:hover {
    color: #b1b1b1;
  }

  li a {
    opacity: 0.6;
  }

  .active a {
    opacity: 1;
  }

  @media (min-width: 55rem) {
    header {
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    .hamburger {
      display: none;
    }

    ul {
      display: flex;
      gap: 2em;
      padding: 0;
    }

    li {
      padding: 0;
      border: none;
    }
  }

  .hamburger {
    margin: 1rem;
    margin-top: 30px;
    width: 30px;
    height: 30px;
    position: relative;
    cursor: pointer;
  }

  .bar {
    padding: 0;
    width: 30px;
    height: 3px;
    background-color: rgb(255, 255, 255);
    display: block;
    position: absolute;
  }

  @media (prefers-reduced-motion: no-preference) {
    @keyframes slide-down {
      from {
        opacity: 0;
        transform: translateY(-5%);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes slide-up {
      from {
        opacity: 1;
        transform: translateY(0);
      }

      to {
        opacity: 0;
        transform: translateY(-5%);
      }
    }

    .bar {
      transition: all 0.25s ease-in-out;
    }

    ul[data-visible="true"] {
      animation: slide-down 0.25s ease-out forwards;
    }

    ul[data-visible="hiding"] {
      animation: slide-up 0.25s ease-out forwards;
    }
  }

  .bar1 {
    top: 0;
  }

  .bar2,
  .bar3 {
    top: 13px;
  }

  .bar3 {
    right: 0;
  }

  .bar4 {
    bottom: 0;
  }

  .bar1,
  .bar4 {
    transform-origin: 5%;
  }

  .open > .bar1 {
    transform: rotate(45deg);
    height: 3px;
    width: 42px;
  }

  .open > .bar3 {
    transform: rotate(45deg);
    height: 3px;
    background-color: transparent;
  }

  .open > .bar2 {
    transform: rotate(-45deg);
    height: 3px;
    background-color: transparent;
  }

  .open > .bar4 {
    transform: rotate(-45deg);
    height: 3px;
    width: 42px;
  }
</style>

<script>
  const hamburger = document.querySelector(".hamburger") as HTMLButtonElement;
  const nav = document.querySelector("ul");

  hamburger.addEventListener("click", () => {
    const visible = nav.getAttribute("data-visible");
    const animation = window.matchMedia(
      "(prefers-reduced-motion: no-preference"
    ).matches;
    if (visible === "false") {
      nav.setAttribute("data-visible", "true");
      hamburger.classList.add("open");
    } else {
      nav.setAttribute("data-visible", "hiding");
      hamburger.classList.remove("open");

      if (animation === true)
        setTimeout(() => nav.setAttribute("data-visible", "false"), 250);
      else nav.setAttribute("data-visible", "false");
    }
  });
</script>
